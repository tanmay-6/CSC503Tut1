CXXFLAGS := -O2 -std=c++17
nodes := 100 200 300 400 500 600 700 800 900 1000
sparcities := a b c d
algorithms := DFSI DFSR BFS
FLAGS := VARN VARM
BIN_DIR := bin
RESULTS := results.csv

$(shell mkdir -p $(BIN_DIR))

all: run

init:
	echo "flag,algorithm,param,value,time(s),memory(KB)" > $(RESULTS)

run: init
	@for flag in $(FLAGS); do \
	  for algo in $(algorithms); do \
	    if [ $$flag = "VARM" ]; then \
	      for n in $(nodes); do \
	        exe="$(BIN_DIR)/$${flag}_$${algo}_$${n}"; \
	        g++ $(CXXFLAGS) -D$$flag -D$$algo main.cpp -o $$exe; \
	        /usr/bin/time -f "$$flag,$$algo,$$n,%e,%M" -o tmp.csv $$exe $$n >/dev/null; \
	        awk -F',' '{printf "%s,%s,%s,%.5f,%s\n",$$1,$$2,$$3,$$4,$$5}' tmp.csv >> $(RESULTS); \
	      done; \
	    else \
	      for sp in $(sparcities); do \
	        exe="$(BIN_DIR)/$${flag}_$${algo}_$${sp}"; \
	        g++ $(CXXFLAGS) -D$$flag -D$$algo main.cpp -o $$exe; \
	        /usr/bin/time -f "$$flag,$$algo,$$sp,%e,%M" -o tmp.csv $$exe $$sp >/dev/null; \
	        awk -F',' '{printf "%s,%s,%s,%.5f,%s\n",$$1,$$2,$$3,$$4,$$5}' tmp.csv >> $(RESULTS); \
	      done; \
	    fi; \
	  done; \
	done
	@rm -f tmp.csv
	@echo "Results in $(RESULTS)"

clean:
	rm -rf $(BIN_DIR) $(RESULTS)

